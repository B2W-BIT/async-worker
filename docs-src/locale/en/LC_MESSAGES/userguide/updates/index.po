# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, B2W Digital
# This file is distributed under the same license as the Asyncworker
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Asyncworker \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-28 21:42-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../userguide/updates/index.rst:2
msgid "Atualizando sua App Asyncworker"
msgstr ""

#: ../../userguide/updates/index.rst:5
msgid ""
"Se você estivere atualizando para versões pós ``0.6.0`` o melhor a fazer "
"é consultar o changelog de cada uma das vesões."
msgstr ""

#: ../../userguide/updates/index.rst:7
msgid ""
"A lista de todas as versões com cada uma de suas mudanças está :ref:`aqui"
" <changelog>`."
msgstr ""

#: ../../userguide/updates/index.rst:11
msgid "0.5.x -> 0.6.0"
msgstr ""

#: ../../userguide/updates/index.rst:13
msgid ""
"Nessa versão, tornamos obrigatório o uso do Enum ``RouteTypes`` e a "
"assinatura de ``app.route`` mudou. Ex.:"
msgstr ""

#: ../../userguide/updates/index.rst:26
msgid "0.1.x -> 0.2.0"
msgstr ""

#: ../../userguide/updates/index.rst:28
msgid ""
"Na versão ``0.2.0`` criamos a possibilidade de receber mensagens em lote."
" E a partir dessa versão a assinatura do handler mudo para:"
msgstr ""

#: ../../userguide/updates/index.rst:37
msgid ""
"As instâncias do objeto ``asyncworker.rabbitmq.RabbitMQMessage`` já vêm "
"por padrão configurado para receber ``ack()`` depois que o handler "
"retornar (sem exception), mas o handler pode mudar isso chamando o método"
" ``message.reject()`` para cada mensagem que precisar ser devolvida para "
"a fila."
msgstr ""

#: ../../userguide/updates/index.rst:39
msgid ""
"O conteúdo da mensagem original está agora no atributo ``message.body``. "
"Então um handler antigo que era assim:"
msgstr ""

#: ../../userguide/updates/index.rst:52
msgid "passa a ser assim:"
msgstr ""

#~ msgid ""
#~ "Nessa versão, tornamos obrigatório o uso"
#~ " do  qenumerator `RouteTypes` e a "
#~ "assinatura de `app.route` mudou. Ex.:"
#~ msgstr ""

#~ msgid "```python from asyncworker.models import RouteTypes"
#~ msgstr ""

#~ msgid ""
#~ "@app.route(['/sse'], type=RouteTypes.SSE) async def"
#~ " event_handler(events):"
#~ msgstr ""

#~ msgid "pass"
#~ msgstr ""

#~ msgid "```"
#~ msgstr ""

#~ msgid ""
#~ "Na versão `0.2.0` criamos a "
#~ "possibilidade de receber mensagens em "
#~ "lote. E a partir dessa versão a"
#~ " assinatura do handler mudo para:"
#~ msgstr ""

#~ msgid "```python from asyncworker.rabbitmq.message import RabbitMQMessage"
#~ msgstr ""

#~ msgid "async def handler(messages: List[RabbitMQMessage]):"
#~ msgstr ""

#~ msgid ""
#~ "As instâncias do objeto "
#~ "`asyncworker.rabbitmq.RabbitMQMessage` já vêm por"
#~ " padrão configurado para receber `ack()`"
#~ " depois queo handler retornar (sem "
#~ "exception), mas o handler pode mudar "
#~ "isso chamando o método `message.reject()` "
#~ "para cada mensagem que precisar ser "
#~ "devolvida para a fila."
#~ msgstr ""

#~ msgid ""
#~ "O conteúdo da mensagem original está "
#~ "agora no atributo `message.body`. Então "
#~ "um handler antigo que era assim:"
#~ msgstr ""

#~ msgid "```python from asyncworker import App"
#~ msgstr ""

#~ msgid ""
#~ "app = App(host=\"127.0.0.1\", user=\"guest\", "
#~ "password=\"guest\", prefetch_count=256)"
#~ msgstr ""

#~ msgid ""
#~ "@app.route([\"asgard/counts\", \"asgard/counts/errors\"], "
#~ "vhost=\"fluentd\") async def drain_handler(message):"
#~ msgstr ""

#~ msgid "logger.info(message)"
#~ msgstr ""

#~ msgid ""
#~ "@app.route([\"asgard/counts\", \"asgard/counts/errors\"], "
#~ "vhost=\"fluentd\") async def "
#~ "drain_handler(messages):"
#~ msgstr ""

#~ msgid "for m in messages:"
#~ msgstr ""

#~ msgid "logger.info(message.body)"
#~ msgstr ""

#~ msgid ""
#~ "As instâncias do objeto "
#~ "``asyncworker.rabbitmq.RabbitMQMessage`` já vêm por"
#~ " padrão configurado para receber ``ack()``"
#~ " depois queo handler retornar (sem "
#~ "exception), mas o handler pode mudar "
#~ "isso chamando o método ``message.reject()``"
#~ " para cada mensagem que precisar ser"
#~ " devolvida para a fila."
#~ msgstr ""

