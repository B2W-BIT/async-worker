version: 2.1

commands:
  cc-before-build:
    description: "Code Climate before-build"
    steps:
      - run:
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            ./cc-test-reporter before-build
  cc-after-build:
    description: "Code Climate after-build"
    steps:
      - run:
          command: |
            ./cc-test-reporter after-build --input-type coverage.py
  fmt-check:
    description: "Confirma que a formatação do código"
    steps:
      - run: "pipenv run fmt-check"
  lint:
    description: "Confirma que a tipagem do código está correta"
    steps:
      - run: "pipenv run lint"
  isort-check:
    description: "Confirma que a ordem dos imports está correta"
    steps:
      - run: "pipenv run isort-check"
  all-tests:
    description: "Roda todos os testes do projeto (unitários e integração)"
    steps:
      - run: "pipenv run all-tests"
  typehint-cov:
    description: "Upload de coverage de typehint"
    steps:
      - run:
          name: "Typehint coverage report"
          command: |
            mkdir -p .mypy/xml/cov
            pipenv run lint --cobertura-xml-report .mypy/xml/cov
            pipenv run codecov --flags typehint --file .mypy/xml/cov/cobertura.xml
            rm -rf .mypy/

jobs:
  py36: &template
    docker:
      - image: circleci/python:3.6
      - image: rabbitmq:3.7-alpine
    steps:
      - checkout
      - run:
          name: Install pip/pipenv
          command: pip install --user -U pip==18.0 pipenv==2018.7.1
      - run:
          name: Install Pipfile.lock
          command: pipenv install --deploy --ignore-pipfile --dev
      - run:
          name: Install asyncworker dev-mode
          command: pipenv run pip install -e .
      - fmt-check
      - isort-check
      - lint
      #- typehint-cov
      - cc-before-build
      - all-tests
      - run:
          when: on_success
          steps:
            - cc-after-build

  py37:
    <<: *template
    docker:
      - image: circleci/python:3.7
      - image: rabbitmq:3.7-alpine

  py38:
    <<: *template
    docker:
      - image: circleci/python:3.8
      - image: rabbitmq:3.7-alpine

workflows:
  version: 2
  required-checks:
    jobs:
      - py36
      - py37
      - py38
